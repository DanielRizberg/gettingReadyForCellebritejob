<Window x:Class="playGroundWPF.View.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:playGroundWPF.View"
        xmlns:convertors="clr-namespace:playGroundWPF.Convertors"
        xmlns:viewModel="clr-namespace:playGroundWPF.ViewModel"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Title="search movie App" Height="450" Width="800" 
        >

    <Window.Background>
        <ImageBrush ImageSource="/playGroundWPF;component/popcorn-red-background-box-movie.jpg" Stretch="UniformToFill"/>
    </Window.Background>
    <Window.Resources>
        
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <convertors:FontSizeConverter x:Key="fontSizeCon"/>
        <convertors:imageWidthHeightConvertor x:Key="imageSizeCon"/>
        <convertors:paddingForTextSearchConvertor x:Key="paddingForTextSearchConvertor"></convertors:paddingForTextSearchConvertor>
        <Style TargetType="Image">
            <Setter Property="MaxHeight" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Converter={StaticResource imageSizeCon}}"></Setter>
            <Setter Property="MaxWidth" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Converter={StaticResource imageSizeCon}}"></Setter>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#c71c1e"></Setter>
                    <Setter Property="Opacity" Value="0.7"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="baseStyle">
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource fontSizeCon}}" />
            <Setter Property="Foreground" Value="White"> </Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource baseStyle}"></Style>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource baseStyle}"></Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource baseStyle}"></Style>
        <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource baseStyle}"></Style>
    
        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource baseStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#c71c1e"></Setter>
                    <Setter Property="Opacity" Value="0.8"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBox, RadioButton, CheckBox, etc... -->
    </Window.Resources>
   
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions >
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="10*"></RowDefinition>
        </Grid.RowDefinitions>

        <TextBox  Text="{Binding SearchValue, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Grid.Row="0" Margin="3" Padding="{Binding ElementName=searchIcon, Path=ActualWidth ,Converter={StaticResource paddingForTextSearchConvertor}}" HorizontalAlignment="Stretch" 
                      VerticalContentAlignment="Center"
                      VerticalAlignment="Stretch" 
                      Background="#c71c1e"
                     Opacity="0.8"
                    >
           
            <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding focus}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding lostfocus}"/>
                    </i:EventTrigger>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding searchValueChanged}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
          
            </TextBox>

        <fa:ImageAwesome Icon="Search"  Grid.Row="0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,10" Name="searchIcon" />
        <ListView Name="myListView" Grid.Row="1"
                Margin="0" Padding="0"
                  Background="Transparent"
             ItemsSource="{Binding movies}"
                   Visibility="{Binding Path=visibleGrid, 
                    Converter={StaticResource booleanToVisibilityConverter}}"
                  >
            <ListView.View>
         
                <GridView >

                    <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Path=title}"  Width="{Binding ElementName=helperField, Path=ActualWidth}"/>
                    <GridViewColumn Header="Image" Width="{Binding ElementName=helperField2, Path=ActualWidth}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Image Source="{Binding Path=image}"
                                           MaxHeight="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource imageSizeCon}}"
                                            MaxWidth="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource imageSizeCon}}"
                                           HorizontalAlignment="Stretch" />
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                   
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Visibility="Hidden" Margin="20" Grid.Row="1">
            <Grid.ColumnDefinitions>
               
                <!--Width is set to "Fill"-->
                <ColumnDefinition Width="*"/>
                <!--Correction Width-->
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
            <Grid Grid.Row="1" x:Name="helperField" Grid.Column="0"/>
            <Grid Grid.Row="1" x:Name="helperField2" Grid.Column="1"/>
        </Grid>
        <Grid x:Name="loader" Margin="20" Grid.Row="1" Visibility="{Binding Path=visibleLoader, 
                    Converter={StaticResource booleanToVisibilityConverter}}">
            <fa:ImageAwesome Icon="Spinner" Spin="True" Height="48" Width="48" />
        </Grid>
    </Grid>
</Window>
